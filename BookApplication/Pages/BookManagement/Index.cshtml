@page
@model BookApplication.Pages.BookManagement.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New Book</a>
</p>
<h4>Search</h4>
<form asp-action="./Index" method="get">
    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                <label for="search" class="custom-control-label">Book Name</label>
            </div>
            <div class="col-md-4">
                <input type="text" name="searchString" value="@Model.SearchingBookName"/>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <label for="search" class="custom-control-label">Quantity</label>
            </div>
            <div class="col-md-4">
                <select name="selectedBookQuantity" class="form-control" asp-items="ViewBag.searchingBookQuantity"></select>
            </div>
        </div>
        <div>
            <div class="row mt-3">
                <input type="submit" value="Search" class="btn btn-primary"/>
            </div>
        </div>
        <div class="row">
            <a asp-page="./Index">Back to full list</a>
        </div>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.BookNameSort">
                    @Html.DisplayNameFor(model => model.Book[0].BookName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.BookQuantitySort">
                    @Html.DisplayNameFor(model => model.Book[0].Quantity)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].AuthorName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Publisher)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Book) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BookName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Publisher.PublisherId)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.BookId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.BookId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.BookId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.Book.PreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Book.NextPage ? "disabled" : "";
}

<a asp-page="./Index" 
asp-route-pageIndex="@(Model.Book.PageIndex - 1)"
class="btn btn-outline-primary @prevDisabled" >Previous</a>
<a asp-page="./Index" 
asp-route-pageIndex="@(Model.Book.PageIndex + 1)"
class="btn btn-outline-primary @nextDisabled" >Next</a>
